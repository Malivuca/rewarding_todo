{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","CustomColorCheckbox","withStyles","color","green","checked","props","Checkbox","icon","checkedIcon","createTask","taskName","id","console","log","App","classes","React","useState","open","setOpen","setTaskName","tasks","setTasks","className","List","component","aria-labelledby","subheader","ListSubheader","onSubmit","e","preventDefault","cloneTasks","push","length","alert","handleSubmit","ListItem","ListItemIcon","IconButton","type","TextField","value","onChange","el","target","fullWidth","map","task","index","ListItemText","primary","onClick","newTasks","filter","i","handleDelete","button","Collapse","in","timeout","unmountOnExit","disablePadding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.394452dd.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n\tmakeStyles,\n\tTheme,\n\tcreateStyles,\n\twithStyles,\n} from '@material-ui/core/styles'\nimport {\n\tListSubheader,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tCollapse,\n\tTextField,\n\tIconButton,\n\tCheckbox,\n} from '@material-ui/core'\n\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport DraftsIcon from '@material-ui/icons/Drafts'\nimport SendIcon from '@material-ui/icons/Send'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport StarBorder from '@material-ui/icons/StarBorder'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded'\nimport RadioButtonUncheckedRoundedIcon from '@material-ui/icons/RadioButtonUncheckedRounded'\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded'\n\nimport { green, blue } from '@material-ui/core/colors'\n\nimport logo from './logo.svg'\nimport './App.css'\n\ninterface TaskProps {\n\ttaskName: string\n\tid: number\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t\tmaxWidth: 360,\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t},\n\t\tnested: {\n\t\t\tpaddingLeft: theme.spacing(4),\n\t\t},\n\t})\n)\n\nconst CustomColorCheckbox = withStyles({\n\troot: {\n\t\t'&$checked': {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props) => (\n\t<Checkbox\n\t\tcolor=\"default\"\n\t\ticon={<RadioButtonUncheckedRoundedIcon />}\n\t\tcheckedIcon={<CheckCircleOutlineRoundedIcon />}\n\t\t{...props}\n\t/>\n))\n\nfunction App() {\n\tconst classes = useStyles()\n\tconst [open, setOpen] = React.useState(true)\n\n\tconst handleClick = () => {\n\t\tsetOpen(!open)\n\t}\n\n\tconst [taskName, setTaskName] = React.useState('')\n\tconst [tasks, setTasks] = React.useState<TaskProps[]>([])\n\n\tconst handleDelete = (id: number) => {\n\t\tconsole.log('Deleting task', id)\n\n\t\t// let newTasks = [...tasks].filter((tesk, index) => tesk.props.id !== id)\n\n\t\tlet newTasks = [...tasks].filter((task, index) => task.id !== id)\n\n\t\t// Guarantees that the tasks IDs wont be equal after deleting one of them\n\t\tfor (let i = id; i < newTasks.length; i++) {\n\t\t\tnewTasks[i].id -= 1\n\t\t}\n\n\t\tconsole.log(newTasks)\n\n\t\tsetTasks(newTasks)\n\t}\n\n\tconst handleSubmit = (e: React.FormEvent) => {\n\t\te.preventDefault()\n\n\t\tif (!taskName) {\n\t\t\talert('You didnt type a task!')\n\n\t\t\treturn\n\t\t}\n\n\t\tlet cloneTasks = [...tasks]\n\n\t\tcloneTasks.push(createTask(taskName, tasks.length))\n\n\t\tsetTasks(cloneTasks)\n\n\t\tsetTaskName('')\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<List\n\t\t\t\t\tcomponent=\"nav\"\n\t\t\t\t\taria-labelledby=\"nested-list-subheader\"\n\t\t\t\t\tsubheader={\n\t\t\t\t\t\t<ListSubheader component=\"div\" id=\"nested-list-subheader\">\n\t\t\t\t\t\t\tRewarding To-do\n\t\t\t\t\t\t</ListSubheader>\n\t\t\t\t\t}\n\t\t\t\t\tclassName={classes.root}\n\t\t\t\t>\n\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e)}>\n\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<IconButton type=\"submit\">\n\t\t\t\t\t\t\t\t\t<AddCircleOutlineIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvalue={taskName}\n\t\t\t\t\t\t\t\tonChange={(el) => setTaskName(el.target.value)}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</form>\n\t\t\t\t\t{tasks.map((task, index) => (\n\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<CustomColorCheckbox />\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={task.taskName} />\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleDelete(task.id)}>\n\t\t\t\t\t\t\t\t\t<DeleteRoundedIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<ListItem button onClick={handleClick}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<InboxIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Aprender Japones\" />\n\t\t\t\t\t\t{open ? <ExpandLess /> : <ExpandMore />}\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Collapse in={open} timeout=\"auto\" unmountOnExit>\n\t\t\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t\t\t<ListItem button className={classes.nested}>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Descricao longa lalalallalal\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Collapse>\n\t\t\t\t</List>\n\t\t\t</header>\n\t\t</div>\n\t\t// <div className=\"App\">\n\t\t// \t<header className=\"App-header\">\n\t\t// \t\t<div className=\"TaskRow\">\n\t\t// \t\t\tSou uma task\n\t\t// \t\t\t<div className=\"TaskCheck\">\n\t\t// \t\t\t\t<button>Check</button>\n\t\t// \t\t\t</div>\n\t\t// \t\t</div>\n\t\t// \t</header>\n\t\t// </div>\n\t)\n}\n\nconst createTask = (taskName: string, id: number) => {\n\tconsole.log(taskName, id)\n\n\tlet newTask = { taskName, id }\n\n\treturn newTask\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}